import asyncio
import random

from aiogram import Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.types import ChatJoinRequest, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.utils.callback_data import CallbackData

approval_cb = CallbackData('chat_join_request', 'approve', 'chat_id')

async def process_chat_invite_request(chat_join_request_handler: ChatJoinRequest, state: FSMContext):
    approve_button = [

            InlineKeyboardButton(text="üê±", callback_data=approval_cb.new(approve='1',
                                                                         chat_id=chat_join_request_handler.chat.id)),
            InlineKeyboardButton(text="üê∂", callback_data=approval_cb.new(approve='0',
                                                                         chat_id=chat_join_request_handler.chat.id)),
            InlineKeyboardButton(text="üê¨", callback_data=approval_cb.new(approve='0',
                                                                         chat_id=chat_join_request_handler.chat.id))
    ]
    random.shuffle(approve_button)
    await chat_join_request_handler.bot.send_message(
        chat_join_request_handler.from_user.id,
        '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –∫–æ—Ç–∏–∫–æ–º',
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[approve_button])
    )


    #await asyncio.sleep(3)
    # –∑–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –µ—Å—Ç—å –ª–∏ —é–∑–µ—Ä –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ —Å–¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ–ø–ª–∞—Ç—É –∏–ª–∏ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª
    #await chat_join_request_handler.approve() # –æ–¥–æ–±—Ä–µ–Ω–∏–µ
    #await chat_join_request_handler.decline() # –Ω–µ–æ–¥–æ–±—Ä–µ–Ω–∏–µ

    # —Å–æ–∑–¥–∞–µ–º –æ—Ç—Å–µ–∏–≤–∞–Ω–∏–µ —é–∑–µ—Ä–±–æ—Ç–æ–≤
async def approve_callback_group_capthcha(call: CallbackQuery, callback_data: dict):
    await call.message.delete_reply_markup()
    await call.message.answer('–í—ã –±—ã–ª–∏ –ø—Ä–∏–Ω—è—Ç—ã –≤ –≤ –≥—Ä—É–ø–ø—É')
    chat_id = callback_data['chat_id']
    await call.bot.approve_chat_join_request(chat_id, call.from_user.id)

async def decline_callbach_group_capthcha(call: CallbackQuery, callback_data: dict):
    await call.message.delete_reply_markup()
    await call.message.answer('–í—ã –Ω–µ –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É')

    chat_id = callback_data['chat_id']
    await call.bot.decline_chat_join_request(chat_id, call.from_user.id)


def register_group_approval(dp: Dispatcher):
    dp.register_chat_join_request_handler(process_chat_invite_request)
    dp.register_callback_query_handler(approve_callback_group_capthcha,
                                       approval_cb.filter(approve='1'))
    dp.register_callback_query_handler(decline_callbach_group_capthcha,
                                       approval_cb.filter())